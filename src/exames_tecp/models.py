from django.db import models

from pacientes.models import Paciente

# Create your models here.

# Create your models here.
class Exame_TECP(models.Model):
    paciente = models.ForeignKey(Paciente, verbose_name = 'Paciente', on_delete = models.CASCADE)
    data_exame = models.DateField(verbose_name = 'Data')
    peso = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Peso')
    altura = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Altura')
    IMC = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'IMC')

    Delta_VO2_W = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Delta VO2/W')
    Delta_VE_VCO2 = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Delta VE/VCO2MC')
    Delta_FC_VO2 = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Delta FC/VO2')
    VE_VVM= models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VE/VVM')
    SpO2 = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'SpO2')
    Borg = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Borg')

    Time_Rest = models.TimeField(verbose_name = 'Time (min) - Rest')
    Time_AT = models.TimeField(verbose_name = 'Time (min) - AT')
    Time_VO2Max = models.TimeField(verbose_name = 'Time (min) - VO2 Max')
    Work_Rest = models.IntegerField(verbose_name = 'Work (Wats) - Rest')
    Work_AT = models.IntegerField(verbose_name = 'Work (Wats) - AT')
    Work_VO2Max = models.IntegerField(verbose_name = 'Work (Wats) - VO2 Max')
    Work_Pred = models.IntegerField(verbose_name = 'Work (Wats) - Pred')
    Work_VO2MaxPred = models.IntegerField(verbose_name = 'Work (Wats) - VO2 Max/Pred (%)')
    Ex_Time_AT = models.TimeField(verbose_name = 'Ex Time (min) - AT')
    Ex_Time_VO2Max = models.TimeField(verbose_name = 'Ex Time (min) - VO2 Max')

    VO2_Rest_ml_min = models.IntegerField(verbose_name = 'VO2 (mL/min) - Rest')
    VO2_AT_ml_min = models.IntegerField(verbose_name = 'VO2 (mL/min) - AT')
    VO2_VO2Max_ml_min = models.IntegerField(verbose_name = 'VO2 (mL/min) - VO2 Max')
    VO2_Pred_ml_min = models.IntegerField(verbose_name = 'VO2 (mL/min) - Pred')
    VO2_VO2MaxPred_ml_min = models.IntegerField(verbose_name = 'VO2 (mL/min) - VO2 Max/Pred (%)')
    VO2_Rest_ml_kg_min = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VO2 (mL/kg/min) - Rest')
    VO2_AT_ml_kg_min = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VO2 (mL/kg/min) - AT')
    VO2_VO2Max_ml_kg_min = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VO2 (mL/kg/min) - VO2 Max')
    VO2_Pred_ml_kg_min = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VO2 (mL/kg/min) - Pred')
    VO2_VO2MaxPred_ml_kg_min = models.IntegerField(verbose_name = 'VO2 (mL/kg/min) - VO2 Max/Pred (%)')
    VCO2_Rest = models.IntegerField(verbose_name = 'VCO2 (mL/min) - VO2 Max/Pred (%)')
    VCO2_AT = models.IntegerField(verbose_name = 'VCO2 (mL/min) - AT')
    VCO2_VO2Max = models.IntegerField(verbose_name = 'VCO2 (mL/min) - VO2 Max')
    VCO2_Pred = models.IntegerField(verbose_name = 'VCO2 (mL/min) - Pred')
    VCO2_VO2MaxPred = models.IntegerField(verbose_name = 'VCO2 (mL/min) - VO2 Max/Pred (%)')
    RER_Rest = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'RER - Rest')
    RER_AT = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'RER - AT')
    RER_VO2Max = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'RER - VO2 Max')

    VE_BTPS_Rest = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VE BTPS (L/min) - Rest')
    VE_BTPS_AT = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VE BTPS (L/min) - AT')
    VE_BTPS_VO2Max = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VE BTPS (L/min) - VO2 Max')
    VE_BTPS_Pred = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'VE BTPS (L/min) - Pred')
    VE_BTPS_VO2MaxPred = models.IntegerField(verbose_name = 'VE BTPS (L/min) - VO2 Max/Pred (%)')
    Vt_BTPS_Rest = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Vt BTPS (L) - Rest')
    Vt_BTPS_AT = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Vt BTPS (L) - AT')
    Vt_BTPS_VO2Max = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Vt BTPS (L) - VO2 Max')
    RR_Rest = models.IntegerField(verbose_name = 'RR (br/min) - Rest')
    RR_AT = models.IntegerField(verbose_name = 'RR (br/min) - AT')
    RR_VO2Max = models.IntegerField(verbose_name = 'RR (br/min) - VO2 Max')
    VE_VO2_Rest = models.IntegerField(verbose_name = 'VE/VO2 - Rest')
    VE_VO2_AT = models.IntegerField(verbose_name = 'VE/VO2 - AT')
    VE_VO2_VO2Max = models.IntegerField(verbose_name = 'VE/VO2 - VO2 Max')
    VE_VO2_Pred = models.IntegerField(verbose_name = 'VE/VO2 - Pred')
    VE_VO2_VO2MaxPred = models.IntegerField(verbose_name = 'VE/VO2 - VO2 Max/Pred (%)')
    VE_VCO2_Rest = models.IntegerField(verbose_name = 'VE/VCO2 - Pred')
    VE_VCO2_AT = models.IntegerField(verbose_name = 'VE/VCO2 - AT')
    VE_VCO2_VO2Max = models.IntegerField(verbose_name = 'VE/VCO2 - VO2 Max')
    VE_VCO2_Pred = models.IntegerField(verbose_name = 'VE/VCO2 - Pred')
    VE_VCO2_VO2MaxPred = models.IntegerField(verbose_name = 'VE/VCO2 - VO2 Max/Pred (%)')
    Ti_Ttot_Rest = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Ti/Ttot - Rest')
    Ti_Ttot_AT = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Ti/Ttot - AT')
    Ti_Ttot_VO2Max = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Ti/Ttot - VO2 Max')
    Ti_Rest = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Ti - Rest')
    Ti_AT = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Ti - AT')
    Ti_VO2Max = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Ti - VO2 Max')
    Te_Rest = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Te - Rest')
    Te_AT = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Te - AT')
    Te_VO2Max = models.DecimalField(max_digits=5, decimal_places=2, verbose_name = 'Te - VO2 Max')

    HeartRate_Rest = models.IntegerField(verbose_name = 'HeartRate (BPM) - Rest')
    HeartRate_AT = models.IntegerField(verbose_name = 'HeartRate (BPM) - AT')
    HeartRate_VO2Max = models.IntegerField(verbose_name = 'HeartRate (BPM) - VO2 Max')
    HeartRate_Pred = models.IntegerField(verbose_name = 'HeartRate (BPM) - Pred')
    HeartRate_VO2MaxPred = models.IntegerField(verbose_name = 'HeartRate (BPM) - VO2 Max/Pred (%)')    
    VO2_HR_Rest = models.IntegerField(verbose_name = 'VO2/HR (mL/beat) - Rest')
    VO2_HR_AT = models.IntegerField(verbose_name = 'VO2/HR (mL/beat) - AT')
    VO2_HR_VO2Max = models.IntegerField(verbose_name = 'VO2/HR (mL/beat) - VO2 Max')
    VO2_HR_Pred = models.IntegerField(verbose_name = 'VO2/HR (mL/beat) - Pred')
    VO2_HR_VO2MaxPred = models.IntegerField(verbose_name = 'VO2/HR (mL/beat) - VO2 Max/Pred (%)')
    
    PETO2_Rest = models.IntegerField(verbose_name = 'PETO2 (mmHg) - Rest')
    PETO2_AT = models.IntegerField(verbose_name = 'PETO2 (mmHg) - AT')
    PETO2_VO2Max = models.IntegerField(verbose_name = 'PETO2 (mmHg) - VO2 Max')
    PETCO2_Rest = models.IntegerField(verbose_name = 'PETCO2 (mmHg) - Rest')
    PETCO2_AT = models.IntegerField(verbose_name = 'PETCO2 (mmHg) - AT')
    PETCO2_VO2Max = models.IntegerField(verbose_name = 'PETCO2 (mmHg) - VO2 Max')

class Pdf_TECP(models.Model):
    pdf = models.FileField(upload_to='tecp/pdfs/', default=None, blank=True, null=True)

    #def __str__(self):
    #    return self.title